swagger: "2.0"
info:
  title: CategoryAPI
  description: Managing the categories for the WebShop
  version: 1.0.0
host: localhost:8771
schemes:
  - http

paths:
  /category:
    get:
      summary: Return all category names 
      description: Return all category names 
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/category'

    post:
      summary: Add a new category to the database
      description: Add a new category to the database
      produces:
        - application/json
      parameters:
        - name: categoryName
          in: query
          type: string
          description: Category Name to be created
          required: true
      responses:
        '400':
          description: Invalid category name supplied
        '404':
          description: Cattegory does already exists or invalid input

  /category/{categoryID}:
    get:
      summary: Return category for specified ID
      description: Return category for specified ID
      parameters:
        - name: categoryID
          in: path
          type: integer
          required: true
          description: CategoryID to search for
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/category'
        '404':
          description: specified categry id can't be found

    delete:
      summary: Delete specified Category this can only be done by a user with admin role.
      parameters:
        - name: categoryID
          in: path
          type: string
          description: Category Name to be deleted
          required: true
      responses:
        '400':
          description: Invalid category supplied
        '406':
          description: Category still has related products

definitions:
  category:
    type: object
    required:
      - name
    properties:
      id:
        type: integer
        format: int64
        example: 1234
      name:
        type: string
        example: Nahrungsmittel
    xml:
      name: Product

