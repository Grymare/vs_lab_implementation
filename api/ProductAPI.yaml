swagger: "2.0"
info:
  title: ProductAPI
  description: Managing the products for the WebShop
  version: 1.0.0
host: localhost:8772
schemes:
  - http
paths:
  /product:
    get:
      summary: Returns all products
      description: Returns all products
      produces:
        - application/xml
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/product'

    post:
      summary: Add a new product to the database
      description: Add a new product to the database
      parameters:
        - name: name
          in: query
          type: string
          required: true
        - name: price
          in: query
          type: number
          required: true
        - name: details
          in: query
          type: string
        - name: categoryId
          in: query
          type: integer
          required: true
        #- in: body
        #  name: body
        #  description: Product object that needs to be added to the store
        #  required: true
        #  schema:
        #    $ref: '#/definitions/product'
      responses:
        '405':
          description: Invalid input

  /product/:
    get:
      summary: Returns all products that match the filter criteria
      description: Returns all products that match the filter criteria
      parameters:
        - name: searchtext
          in: query
          type: string
        - name: min
          in: query
          type: number
        - name: max
          in: query
          type: number
      produces:
        - application/xml
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/product'

  /product/{productID}:
    get:
      summary: Returns product for specified ID
      description: Returns product for specified ID
      parameters:
        - name: productID
          in: path
          type: integer
          required: true
      produces:
        - application/xml
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/product'
        '404':
          description: No entries for specified product ID found
  
    delete:
      summary: Delete specified Product this can only be done by a user with admin role.
      parameters:
        - name: productID
          in: path
          description: Product ID to be deleted
          required: true
          type: string
      responses:
        '400':
          description: Invalid product ID supplied
        '406':
          description: Category still has related products

definitions:
  category:
    type: object
    required:
      - name
    properties:
      id:
        type: integer
        format: int64
        example: 5678
      name:
        type: string
        example: Nahrungsmittel
    xml:
      name: category

  product:
    type: object
    required:
      - name
      - price
      - category
    properties:
      categoryId:
        type: integer
        description: ID for the linked category
        example: 0
      name:
        type: string
        example: Bleistift
      price:
        type: number
        example: 5.5
      details:
        type: string
        description: Description of the product
        example: This is a product description
    xml:
      name: product


